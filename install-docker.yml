--- ###This script prepares machine and installs Docker on it.

- hosts: test
  connection: ssh
  remote_user: root
  gather_facts: false
  vars_files:
          - ./install-docker-vars.yml
  tasks:
          - name: remove default resolver file
            file:
                    path: /etc/resolv.conf
                    state: absent
          - name: put entries into resolver file
            blockinfile:
                    path: /etc/resolv.conf
                    block: |
                            nameserver 9.9.9.9
                            nameserver 4.2.2.4
                    create: true
          - name: stop firewalld
            shell: systemctl disable --now firewalld
          - name: mask firewalld
            shell: systemctl mask firewalld
          - name: install EPEL repo
            yum:
              name: 'epel-release'
              update_cache: true
              state: latest
          - name: update system
            yum:
              name: '*'
              update_cache: true
              state: latest
            register: updated_packages
          - debug: var=updated_packages
          - name: reboot system
            reboot:
                    reboot_timeout: 1000
          - name: install packages
            yum:
                    update_cache: true
                    name: "{{ basic_packages }}"
                    state: present
            register: installed_packages
          - debug: var=installed_packages
          - name: flush firewall
            iptables:
                    flush: true
          - name: add lo rule to firewall
            iptables:
                    action: insert
                    chain: INPUT
                    in_interface: lo
                    jump: ACCEPT
          - name: add state rule
            iptables:
                    action: insert
                    chain: INPUT
                    ctstate: ESTABLISHED,RELATED
                    jump: ACCEPT
          - name: add trusted ips for ssh
            iptables:
                    action: insert
                    chain: INPUT
                    source: "{{ trusted_ssh_ips }}"
                    protocol: tcp
                    destination_port: "{{ ssh_port }}"
                    jump: ACCEPT
            when: is_exclusive == false
          - name: block untrusted ips for ssh
            iptables:
                    action: append
                    chain: INPUT
                    protocol: tcp
                    destination_port: "{{ ssh_port }}"
                    jump: DROP
            when: is_exclusive == false
          - name: add trusted ips for icmp
            iptables:
                    action: insert
                    chain: INPUT
                    protocol: icmp
                    icmp_type: 8
                    source: "{{ trusted_icmp_ips }}"
                    jump: ACCEPT
            when: is_exclusive == false
          - name: block untrusted ips for icmp
            iptables:
                    action: append
                    chain: INPUT
                    protocol: icmp
                    icmp_type: 8
                    jump: DROP
            when: is_exclusive == false
          - name: make iptables rules persistent
            shell: iptables-save > /etc/sysconfig/iptables
          - name: enable iptables
            service:
                    name: iptables
                    state: started
                    enabled: yes
          - name: enable chrony
            service:
                    name: chronyd
                    state: restarted
                    enabled: yes
          - name: add docker repo
            yum_repository:
                    name: docker
                    description: Docker CE Stable - $basearch
                    baseurl: "{{ docker_repo }}"
                    gpgcheck: yes
                    gpgkey: "{{ docker_gpg_key }}"
          - name: install docker
            yum:
                    name: "{{ docker_packages }}"
                    update_cache: true
                    state: present
          - name: enable docker service
            service:
                    name: docker
                    state: started
                    enabled: yes
          - name: install docker compose
            shell: curl -L "{{ docker-compose_url }}" -o /usr/local/bin/docker-compose
          - name: add execute permission to docker-compose
            file:
                    path: /usr/local/bin/docker-compose
                    mode: '0744'
          - name: link docker compose executable
            file:
                    src: /usr/local/bin/docker-compose
                    dest: /usr/bin/docker-compose
                    state: link

